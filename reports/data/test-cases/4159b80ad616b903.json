{
  "uid" : "4159b80ad616b903",
  "name" : "商品单位删除",
  "fullName" : "projectService.bees_project.test_products_service.TestBeesProject#test_bees_business_entity_service_product",
  "historyId" : "7c6d307171dd661cbd3ed77f8d02bee7",
  "time" : {
    "start" : 1661416995723,
    "stop" : 1661416995726,
    "duration" : 3
  },
  "description" : "商品单位删除",
  "descriptionHtml" : "<p>商品单位删除</p>\n",
  "status" : "broken",
  "statusMessage" : "Exception: 'category_id'转换全局变量的数据类型read_extract_data_int异常封装替换数据replace_value异常",
  "statusTrace" : "self = <commons.function_util.FunctionUtil object at 0x000001786819D668>, key = 'category_id'\n\n    def read_extract_data_int(self, key):\n        try:\n>           num = self.read_extract_data(key)\n\ncommons\\function_util.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <commons.function_util.FunctionUtil object at 0x000001786819D668>, key = 'category_id'\n\n    def read_extract_data(self, key):\n>       return read_extract_yaml(key)\n\ncommons\\function_util.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkey = 'category_id'\n\n    def read_extract_yaml(key):\n        with open(get_object_path() + \"/config/extract.yaml\", encoding='utf-8') as f:\n>           return yaml.load(f, Loader=yaml.FullLoader)[key]\nE           KeyError: 'category_id'\n\ncommons\\yaml_util.py:20: KeyError\n\nDuring handling of the above exception, another exception occurred:\n\ndata = '{\"id\":\"${read_extract_data_int(category_id)}\"}'\n\n    @staticmethod\n    def replace_value(data):\n        try:\n            if data:\n    \n                data_type = type(data)\n    \n                if isinstance(data, dict) or isinstance(data, list):\n                    str_data = json.dumps(data)\n    \n                else:\n                    str_data = str(data)\n    \n                for counts in range(1, str_data.count(\"${\") + 1):\n                    if \"${\" in str_data and \"}\" in str_data:\n                        start_index = str_data.index(\"${\")\n                        end_index = str_data.index(\"}\", start_index)\n                        old_value = str_data[start_index:end_index + 1]\n    \n                        function_name = old_value[2:old_value.index('(')]\n                        args_value1 = old_value[old_value.index('(') + 1:old_value.index(')')]\n    \n                        if args_value1 != \"\":\n                            args_value2 = args_value1.split(',')\n>                           new_value = getattr(FunctionUtil(), function_name)(*args_value2)\n\ncommons\\requests_util.py:282: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <commons.function_util.FunctionUtil object at 0x000001786819D668>, key = 'category_id'\n\n    def read_extract_data_int(self, key):\n        try:\n            num = self.read_extract_data(key)\n            num_int = int(num)\n            return num_int\n        except Exception as e:\n>           loggingUtil().get_error_log(str(e) + \"转换全局变量的数据类型read_extract_data_int异常\")\n\ncommons\\function_util.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <commons.logging_util.loggingUtil object at 0x000001786819D780>, message = \"'category_id'转换全局变量的数据类型read_extract_data_int异常\"\n\n    def get_error_log(self, message):\n        self.getlogger().error(message)\n>       raise Exception(message)\nE       Exception: 'category_id'转换全局变量的数据类型read_extract_data_int异常\n\ncommons\\logging_util.py:41: Exception\n\nDuring handling of the above exception, another exception occurred:\n\nself = <projectService.bees_project.test_products_service.TestBeesProject object at 0x0000017868466FD0>, caseinfo = {'上传文件路径': None, '下载文件路径': None, '响应报文提取': None, '响应文本断言': '{\"message\":\"单位被使用，不能删除\"}', ...}, product_fixture = None\n\n    @pytest.mark.bees\n    @pytest.mark.products_service\n    @pytest.mark.product\n    @pytest.mark.parametrize(\"caseinfo\", read_excel(\"product\", \"./caseInfo/bees_products_service.xlsx\"))\n    def test_bees_business_entity_service_product(self, caseinfo,product_fixture):\n>       RequestsUtilExcel().standard_excel(caseinfo)\n\nprojectService\\bees_project\\test_products_service.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ncommons\\requests_util.py:43: in standard_excel\n    res = self.send_request(method, url, param, header, download, upload)\ncommons\\requests_util.py:136: in send_request\n    param = self.replace_value(param)\ncommons\\requests_util.py:300: in replace_value\n    loggingUtil().get_error_log(str(e) + \"封装替换数据replace_value异常\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <commons.logging_util.loggingUtil object at 0x00000178680C3898>, message = \"'category_id'转换全局变量的数据类型read_extract_data_int异常封装替换数据replace_value异常\"\n\n    def get_error_log(self, message):\n        self.getlogger().error(message)\n>       raise Exception(message)\nE       Exception: 'category_id'转换全局变量的数据类型read_extract_data_int异常封装替换数据replace_value异常\n\ncommons\\logging_util.py:41: Exception",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1661416994992,
      "stop" : 1661416995049,
      "duration" : 57
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1661416995049,
      "stop" : 1661416995049,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1661416995050,
      "stop" : 1661416995050,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "base_config",
    "time" : {
      "start" : 1661416995050,
      "stop" : 1661416995069,
      "duration" : 19
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "product_fixture",
    "time" : {
      "start" : 1661416995069,
      "stop" : 1661416995072,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "商品单位删除",
    "status" : "broken",
    "statusMessage" : "Exception: 'category_id'转换全局变量的数据类型read_extract_data_int异常封装替换数据replace_value异常",
    "statusTrace" : "self = <commons.function_util.FunctionUtil object at 0x000001786819D668>, key = 'category_id'\n\n    def read_extract_data_int(self, key):\n        try:\n>           num = self.read_extract_data(key)\n\ncommons\\function_util.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <commons.function_util.FunctionUtil object at 0x000001786819D668>, key = 'category_id'\n\n    def read_extract_data(self, key):\n>       return read_extract_yaml(key)\n\ncommons\\function_util.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkey = 'category_id'\n\n    def read_extract_yaml(key):\n        with open(get_object_path() + \"/config/extract.yaml\", encoding='utf-8') as f:\n>           return yaml.load(f, Loader=yaml.FullLoader)[key]\nE           KeyError: 'category_id'\n\ncommons\\yaml_util.py:20: KeyError\n\nDuring handling of the above exception, another exception occurred:\n\ndata = '{\"id\":\"${read_extract_data_int(category_id)}\"}'\n\n    @staticmethod\n    def replace_value(data):\n        try:\n            if data:\n    \n                data_type = type(data)\n    \n                if isinstance(data, dict) or isinstance(data, list):\n                    str_data = json.dumps(data)\n    \n                else:\n                    str_data = str(data)\n    \n                for counts in range(1, str_data.count(\"${\") + 1):\n                    if \"${\" in str_data and \"}\" in str_data:\n                        start_index = str_data.index(\"${\")\n                        end_index = str_data.index(\"}\", start_index)\n                        old_value = str_data[start_index:end_index + 1]\n    \n                        function_name = old_value[2:old_value.index('(')]\n                        args_value1 = old_value[old_value.index('(') + 1:old_value.index(')')]\n    \n                        if args_value1 != \"\":\n                            args_value2 = args_value1.split(',')\n>                           new_value = getattr(FunctionUtil(), function_name)(*args_value2)\n\ncommons\\requests_util.py:282: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <commons.function_util.FunctionUtil object at 0x000001786819D668>, key = 'category_id'\n\n    def read_extract_data_int(self, key):\n        try:\n            num = self.read_extract_data(key)\n            num_int = int(num)\n            return num_int\n        except Exception as e:\n>           loggingUtil().get_error_log(str(e) + \"转换全局变量的数据类型read_extract_data_int异常\")\n\ncommons\\function_util.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <commons.logging_util.loggingUtil object at 0x000001786819D780>, message = \"'category_id'转换全局变量的数据类型read_extract_data_int异常\"\n\n    def get_error_log(self, message):\n        self.getlogger().error(message)\n>       raise Exception(message)\nE       Exception: 'category_id'转换全局变量的数据类型read_extract_data_int异常\n\ncommons\\logging_util.py:41: Exception\n\nDuring handling of the above exception, another exception occurred:\n\nself = <projectService.bees_project.test_products_service.TestBeesProject object at 0x0000017868466FD0>, caseinfo = {'上传文件路径': None, '下载文件路径': None, '响应报文提取': None, '响应文本断言': '{\"message\":\"单位被使用，不能删除\"}', ...}, product_fixture = None\n\n    @pytest.mark.bees\n    @pytest.mark.products_service\n    @pytest.mark.product\n    @pytest.mark.parametrize(\"caseinfo\", read_excel(\"product\", \"./caseInfo/bees_products_service.xlsx\"))\n    def test_bees_business_entity_service_product(self, caseinfo,product_fixture):\n>       RequestsUtilExcel().standard_excel(caseinfo)\n\nprojectService\\bees_project\\test_products_service.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ncommons\\requests_util.py:43: in standard_excel\n    res = self.send_request(method, url, param, header, download, upload)\ncommons\\requests_util.py:136: in send_request\n    param = self.replace_value(param)\ncommons\\requests_util.py:300: in replace_value\n    loggingUtil().get_error_log(str(e) + \"封装替换数据replace_value异常\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <commons.logging_util.loggingUtil object at 0x00000178680C3898>, message = \"'category_id'转换全局变量的数据类型read_extract_data_int异常封装替换数据replace_value异常\"\n\n    def get_error_log(self, message):\n        self.getlogger().error(message)\n>       raise Exception(message)\nE       Exception: 'category_id'转换全局变量的数据类型read_extract_data_int异常封装替换数据replace_value异常\n\ncommons\\logging_util.py:41: Exception",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8e47bec0b05f72b0",
      "name" : "log",
      "source" : "8e47bec0b05f72b0.txt",
      "type" : "text/plain",
      "size" : 449
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "Console端api"
  }, {
    "name" : "feature",
    "value" : "console"
  }, {
    "name" : "epic",
    "value" : "BEES-products-service"
  }, {
    "name" : "tag",
    "value" : "product"
  }, {
    "name" : "tag",
    "value" : "products_service"
  }, {
    "name" : "tag",
    "value" : "bees"
  }, {
    "name" : "parentSuite",
    "value" : "projectService.bees_project"
  }, {
    "name" : "suite",
    "value" : "test_products_service"
  }, {
    "name" : "subSuite",
    "value" : "TestBeesProject"
  }, {
    "name" : "host",
    "value" : "LAPTOP-R4PSB7K8"
  }, {
    "name" : "thread",
    "value" : "14680-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "projectService.bees_project.test_products_service"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "product", "products_service", "bees" ]
  },
  "source" : "4159b80ad616b903.json",
  "parameterValues" : [ ]
}