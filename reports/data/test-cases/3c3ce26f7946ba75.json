{
  "uid" : "3c3ce26f7946ba75",
  "name" : "主品类删除查询",
  "fullName" : "projectService.bees_project.test_products_service.TestBeesProject#test_bees_business_entity_service_product",
  "historyId" : "d67a3ccdc6dc527b34d5414af28d6d99",
  "time" : {
    "start" : 1661416995836,
    "stop" : 1661416995895,
    "duration" : 59
  },
  "description" : "主品类删除查询",
  "descriptionHtml" : "<p>主品类删除查询</p>\n",
  "status" : "broken",
  "statusMessage" : "TypeError: object of type 'bool' has no len()",
  "statusTrace" : "self = <projectService.bees_project.test_products_service.TestBeesProject object at 0x00000178684665F8>, caseinfo = {'上传文件路径': None, '下载文件路径': None, '响应报文提取': None, '响应文本断言': '{\"deleted\":None}', ...}, product_fixture = None\n\n    @pytest.mark.bees\n    @pytest.mark.products_service\n    @pytest.mark.product\n    @pytest.mark.parametrize(\"caseinfo\", read_excel(\"product\", \"./caseInfo/bees_products_service.xlsx\"))\n    def test_bees_business_entity_service_product(self, caseinfo,product_fixture):\n>       RequestsUtilExcel().standard_excel(caseinfo)\n\nprojectService\\bees_project\\test_products_service.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ncommons\\requests_util.py:55: in standard_excel\n    self.assert_result(code, text, return_json, response_time)\ncommons\\requests_util.py:334: in assert_result\n    self.assert_text(text, sj_result)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <commons.requests_util.RequestsUtilExcel object at 0x0000017868276C50>, text = '{\"deleted\":None}', sj_result = {'code': 200, 'message': '成功', 'result': {'current': 1, 'list': [], 'totalSize': 0}}\n\n    def assert_text(self, text, sj_result):\n    \n        if text:\n            for key, value in eval(text).items():\n                value = self.replace_value(value)\n                assert_value = jsonpath.jsonpath(sj_result, f\"$..{key}\")\n    \n>               if len(assert_value) == 1:\nE               TypeError: object of type 'bool' has no len()\n\ncommons\\requests_util.py:369: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1661416994992,
      "stop" : 1661416995049,
      "duration" : 57
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1661416995049,
      "stop" : 1661416995049,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1661416995050,
      "stop" : 1661416995050,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "base_config",
    "time" : {
      "start" : 1661416995050,
      "stop" : 1661416995069,
      "duration" : 19
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "product_fixture",
    "time" : {
      "start" : 1661416995069,
      "stop" : 1661416995072,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "主品类删除查询",
    "status" : "broken",
    "statusMessage" : "TypeError: object of type 'bool' has no len()",
    "statusTrace" : "self = <projectService.bees_project.test_products_service.TestBeesProject object at 0x00000178684665F8>, caseinfo = {'上传文件路径': None, '下载文件路径': None, '响应报文提取': None, '响应文本断言': '{\"deleted\":None}', ...}, product_fixture = None\n\n    @pytest.mark.bees\n    @pytest.mark.products_service\n    @pytest.mark.product\n    @pytest.mark.parametrize(\"caseinfo\", read_excel(\"product\", \"./caseInfo/bees_products_service.xlsx\"))\n    def test_bees_business_entity_service_product(self, caseinfo,product_fixture):\n>       RequestsUtilExcel().standard_excel(caseinfo)\n\nprojectService\\bees_project\\test_products_service.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ncommons\\requests_util.py:55: in standard_excel\n    self.assert_result(code, text, return_json, response_time)\ncommons\\requests_util.py:334: in assert_result\n    self.assert_text(text, sj_result)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <commons.requests_util.RequestsUtilExcel object at 0x0000017868276C50>, text = '{\"deleted\":None}', sj_result = {'code': 200, 'message': '成功', 'result': {'current': 1, 'list': [], 'totalSize': 0}}\n\n    def assert_text(self, text, sj_result):\n    \n        if text:\n            for key, value in eval(text).items():\n                value = self.replace_value(value)\n                assert_value = jsonpath.jsonpath(sj_result, f\"$..{key}\")\n    \n>               if len(assert_value) == 1:\nE               TypeError: object of type 'bool' has no len()\n\ncommons\\requests_util.py:369: TypeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "10a4020a288c3506",
      "name" : "log",
      "source" : "10a4020a288c3506.txt",
      "type" : "text/plain",
      "size" : 886
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "Console端api"
  }, {
    "name" : "feature",
    "value" : "console"
  }, {
    "name" : "epic",
    "value" : "BEES-products-service"
  }, {
    "name" : "tag",
    "value" : "product"
  }, {
    "name" : "tag",
    "value" : "products_service"
  }, {
    "name" : "tag",
    "value" : "bees"
  }, {
    "name" : "parentSuite",
    "value" : "projectService.bees_project"
  }, {
    "name" : "suite",
    "value" : "test_products_service"
  }, {
    "name" : "subSuite",
    "value" : "TestBeesProject"
  }, {
    "name" : "host",
    "value" : "LAPTOP-R4PSB7K8"
  }, {
    "name" : "thread",
    "value" : "14680-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "projectService.bees_project.test_products_service"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "product", "products_service", "bees" ]
  },
  "source" : "3c3ce26f7946ba75.json",
  "parameterValues" : [ ]
}